version: 0.2

phases:
  pre_build:
    commands:
      - export DOCKER_BUILDKIT=1
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $REPOSITORY_URI
      - echo Pulling the previous image to use as cache...
      - docker pull $REPOSITORY_URI:builder || echo "No existing image found, proceeding without cache"
      - docker pull $REPOSITORY_URI:latest || echo "No existing image found, proceeding without cache"

  build:
    commands:
      - echo Building the intermediate Docker stages...

      - |
        docker build \
        --progress=plain \
        --target builder \
        --cache-from $REPOSITORY_URI:builder \
        --build-arg BUILDKIT_INLINE_CACHE=1 \
        --tag $API_IMAGE_REPO_NAME:builder \
        --file Dockerfile .
      - |
        docker tag $API_IMAGE_REPO_NAME:builder \
        $REPOSITORY_URI:builder

      - |
        docker build \
        --progress=plain \
        --cache-from $REPOSITORY_URI:builder \
        --cache-from $REPOSITORY_URI:latest \
        --build-arg BUILDKIT_INLINE_CACHE=1 \
        --tag $API_IMAGE_REPO_NAME:$CODEBUILD_RESOLVED_SOURCE_VERSION \
        --file Dockerfile .
      - |
        docker tag \
        $API_IMAGE_REPO_NAME:$CODEBUILD_RESOLVED_SOURCE_VERSION \
        $REPOSITORY_URI:$CODEBUILD_RESOLVED_SOURCE_VERSION
      - |
        docker tag \
        $API_IMAGE_REPO_NAME:$CODEBUILD_RESOLVED_SOURCE_VERSION \
        $REPOSITORY_URI:latest

  post_build:
    commands:
      - echo Pushing the Docker image...
      - docker push $REPOSITORY_URI:$CODEBUILD_RESOLVED_SOURCE_VERSION
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:builder
      - echo Writing image definitions file...
      - printf '[{"name":"rust-server","imageUri":"%s"}]' $REPOSITORY_URI:latest > imagedefinitions.json

artifacts:
  files: imagedefinitions.json
