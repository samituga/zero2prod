name: Rust

on: [ push, pull_request ]

env:
  CARGO_TERM_COLOR: always
  SQLX_VERSION: 0.8.0
  SQLX_FEATURES: "rustls,postgres"
  DATABASE_URL: "postgres://postgres:password@localhost:5432/newsletter"
  APP_AWS__ACCESS_KEY_ID: "dummy"
  APP_AWS__SECRET_ACCESS_KEY: "dummy"

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16.2
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: newsletter
        ports:
          - 5432:5432
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Install the Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1

#      - name: Cache Docker images
#        uses: ScribeMD/docker-cache@0.5.0
#        with:
#          key: docker-${{ runner.os }}-${{ hashFiles('scripts/init_db.sh') }}

      - name: Install sqlx-cli
        run:
          cargo install sqlx-cli
          --version=${{ env.SQLX_VERSION }}
          --features ${{ env.SQLX_FEATURES }}
          --no-default-features
          --locked

      - name: Migrate database
        run: SKIP_DOCKER=true ./scripts/init_db.sh

      - name: Run tests
        run: cargo test

  lint:
    name: Lint
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16.2
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: newsletter
        ports:
          - 5432:5432
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5

      - name: Install the Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Install missing cargos
        run: |
          cargo install cargo-sort

      - name: Install pre-commit
        run: pip install --no-cache-dir pre-commit

#      - name: Cache Docker images
#        uses: ScribeMD/docker-cache@0.5.0
#        with:
#          key: docker-${{ runner.os }}-${{ hashFiles('scripts/init_db.sh') }}

      - name: Install sqlx-cli
        run:
          cargo install sqlx-cli
          --version=${{ env.SQLX_VERSION }}
          --features ${{ env.SQLX_FEATURES }}
          --no-default-features
          --locked

      - name: Migrate database
        run: SKIP_DOCKER=true ./scripts/init_db.sh

      - name: Configure pre-commit cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ runner.os }}-pre-commit-${{ hashFiles('**/.pre-commit-config.yaml') }}

      - name: Run pre-commit
        run: pre-commit run --all-files